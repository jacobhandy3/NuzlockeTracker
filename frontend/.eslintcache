[{"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\App.tsx":"1","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\index.tsx":"3","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\SignUp.tsx":"4","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Profile.tsx":"5","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Login.tsx":"6","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\History.tsx":"7","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Game.tsx":"8","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Rules.tsx":"9","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\CreateGame.tsx":"10","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\axiosAPI.tsx":"11","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\refreshToken.tsx":"12"},{"size":3833,"mtime":1607893882473,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1607210213999,"results":"15","hashOfConfig":"14"},{"size":591,"mtime":1607546785510,"results":"16","hashOfConfig":"14"},{"size":1700,"mtime":1607462854844,"results":"17","hashOfConfig":"14"},{"size":4349,"mtime":1608654097161,"results":"18","hashOfConfig":"14"},{"size":3735,"mtime":1608654096523,"results":"19","hashOfConfig":"14"},{"size":3765,"mtime":1608654094494,"results":"20","hashOfConfig":"14"},{"size":8609,"mtime":1609015420436,"results":"21","hashOfConfig":"14"},{"size":5587,"mtime":1608825678614,"results":"22","hashOfConfig":"14"},{"size":5391,"mtime":1608499925724,"results":"23","hashOfConfig":"14"},{"size":346,"mtime":1608496545530,"results":"24","hashOfConfig":"14"},{"size":285,"mtime":1608651309966,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vkz25v",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\App.tsx",["57","58"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\index.tsx",[],["59","60"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\SignUp.tsx",["61"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Modal,Button,Form } from \"react-bootstrap\";\r\n\r\nfunction SignUpModal() {\r\n\r\n    const [show, setShow]: [boolean, (show:boolean) => void] = React.useState<boolean>(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleShow}>Sign Up</Button>\r\n            <Modal show={show} onHide={handleClose} size=\"lg\" aria-labelledby=\"container-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Sign Up\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicUsername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control placeholder=\"Enter username\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUpModal;\r\n// TODO:\r\n//      Sign Up Functionality",["62","63"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Profile.tsx",[],["64","65"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Login.tsx",[],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\History.tsx",["66"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport axiosInstance from \"../axiosAPI\";\r\nimport axiosRefresh from \"../refreshToken\";\r\nimport {\r\n    Button,\r\n    Container, Row, Col,\r\n    Card,\r\n  } from 'react-bootstrap';\r\n\r\n  interface IHistory {\r\n      game: number,\r\n      title: string,\r\n      body: string,\r\n      start_date: Date,\r\n      end_date: Date,\r\n      slug: string,\r\n  }\r\n\r\n  const defaultHistory:IHistory[] = [];\r\n\r\n  function History(): JSX.Element {\r\n      //states\r\n      const [history,setHistory]: [IHistory[], (history: IHistory[]) => void] = React.useState(defaultHistory);\r\n      const [loading,setLoading]: [boolean, (loading:boolean) => void] = React.useState<boolean>(true);\r\n      //effects\r\n      const handleDelete = async (h:IHistory) => {\r\n          const responseDelete = await axiosInstance.delete('http://127.0.0.1:8000/api/history' + h.slug);\r\n          console.log(responseDelete);\r\n          window.location.reload();\r\n      }\r\n      //GET HISTORY LIST FROM API\r\n      React.useEffect(() => {\r\n          axios.get<IHistory[]>(\"http://127.0.0.1:8000/api/history/\", { headers: {\r\n            \"Content-Type\": \"applications/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('access_token'),\r\n        }}).then(response => {\r\n                    setHistory(response.data);\r\n                    setLoading(false);\r\n                    console.log(response.data);\r\n                })\r\n                .catch(async function (error) {\r\n                    if(error.response.status === 401 && localStorage.getItem('refresh_token') !== null) {\r\n                        try {\r\n                            const response = await axiosRefresh.post('', {\r\n                                refresh: localStorage.getItem('refresh_token')\r\n                            });\r\n                            localStorage.setItem('access_token',response.data.access);\r\n                        } catch (error) {\r\n                            throw(error);\r\n                        }\r\n                    }\r\n                });\r\n      }, []);\r\n      if(history.length !== 0){\r\n      return (\r\n          <div>\r\n              {history.map(h => {\r\n                  return <Container fluid>\r\n                    <br></br>\r\n                    <Card key={h.slug}>\r\n                        <Card.Header>\r\n                            <Row className=\"row align-items-center\">\r\n                                <Col md={{ span: 8, offset: 2 }}>{h.title}</Col>\r\n                                <Col md={{ span: 1, offset: 1 }}>\r\n                                <Button variant=\"danger\" onClick={() => handleDelete(h)}>X</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Header>\r\n                        <Card.Body><Card.Text>{h.body}</Card.Text></Card.Body>\r\n                        <Card.Footer className=\"text-muted\">\r\n                            <Row className=\"row align-items-center\">\r\n                                <Col>{Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(new Date(h.start_date))}</Col>\r\n                                <Col>{Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(new Date(h.end_date))}</Col>\r\n                            </Row>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                    <br></br>\r\n                </Container>\r\n              })}\r\n            </div>\r\n      )}else{return <div><h3>You don't have any completed runs!</h3></div>}\r\n  }\r\n\r\n  export default History;",["67","68"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Game.tsx",[],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Rules.tsx",["69","70"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport axiosInstance from \"../axiosAPI\";\r\nimport axiosRefresh from \"../refreshToken\";\r\nimport {\r\n  Button,\r\n  Container, Row, Col,\r\n  CardColumns, Card,\r\n  Modal,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport slugify from 'slugify';\r\n\r\n//interface for rules sent by API\r\ninterface IRule {\r\n    title: string;\r\n    body: string;\r\n    slug: string,\r\n}\r\ninterface newRule {\r\n    title: string;\r\n    body: string;\r\n}\r\n//initialize state for interfaces\r\nconst defaultRules:IRule[] = [];\r\n\r\nfunction Rules(): JSX.Element {\r\n    //states\r\n    const [rules,setRules]: [IRule[], (rules: IRule[]) => void] = React.useState(defaultRules);\r\n    const [customRule,setCustomRule]: [newRule,(customRule: newRule) => void] = React.useState({title:\"\",body:\"\"})\r\n    const [loading,setLoading]: [boolean, (loading:boolean) => void] = React.useState<boolean>(true);\r\n    const [show, setShow]: [boolean, (show:boolean) => void] = React.useState<boolean>(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const response = await axiosInstance.post('api/rules/', {\r\n                title: customRule.title,\r\n                body: customRule.body,\r\n                slug: slugify(customRule.title,{lower:true,strict:true}),\r\n            });\r\n            console.log(response);\r\n            window.location.reload();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    const handleChange_title = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCustomRule({\r\n            title:e.target.value,\r\n            body:customRule.body,\r\n        });\r\n    }\r\n    const handleChange_body = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCustomRule({\r\n            title:customRule.title,\r\n            body:e.target.value\r\n        });\r\n    }\r\n\r\n    //effects\r\n    //GET LIST OF RULES FROM API\r\n    let auth:{[name:string]:string} = {\r\n        \"Content-Type\": \"applications/json\",\r\n        \"Accept\": \"application/json\",\r\n    }\r\n    if(localStorage.getItem('access_token')!=null){auth.Authorization = \"Bearer \" + localStorage.getItem('access_token');}\r\n    React.useEffect(() => {\r\n        axios\r\n            .get<IRule[]>(\"http://127.0.0.1:8000/api/rules/\", { headers: auth })\r\n            .then(response => {\r\n            setRules(response.data);\r\n            setLoading(false);\r\n            },\r\n            (error) => {\r\n                setLoading(true);\r\n                console.log(error);\r\n            })\r\n            .catch(async function (error) {\r\n                if(error.response.status === 401 && localStorage.getItem('refresh_token') !== null) {\r\n                    try {\r\n                        const response = await axiosRefresh.post('', {\r\n                            refresh: localStorage.getItem('refresh_token')\r\n                        });\r\n                        localStorage.setItem('access_token',response.data.access);\r\n                    } catch (error) {\r\n                        throw(error);\r\n                    }\r\n                }\r\n            });\r\n    },[]);\r\n        return(\r\n        <>\r\n        <Container fluid>\r\n            <Row className=\"row align-items-center\">\r\n                <Col md={{ span: 2, offset: 5 }}><h1>Rules</h1></Col>\r\n                <Col md={{ span: 2, offset: 3 }}>\r\n                    <Button href=\"https://bulbapedia.bulbagarden.net/wiki/Nuzlocke_Challenge\" variant=\"info\">\r\n                        Learn More\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        <Container fluid>\r\n            <CardColumns>\r\n                {rules.map(rule => {\r\n                    return <Card key={rule.slug}>\r\n                        <Card.Body>\r\n                            <Card.Title>{rule.title}</Card.Title>\r\n                            <Card.Text>{rule.body}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                })}\r\n            </CardColumns>\r\n            <Button onClick={handleShow}>Add a Rule</Button>\r\n            <Modal show={show} onHide={handleClose} size=\"lg\" aria-labelledby=\"container-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton><h3>Add a Rule</h3></Modal.Header>\r\n                <Modal.Body>\r\n                <Form>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextTitle\">\r\n                            <Form.Label column sm=\"2\">\r\n                                Title\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control value={customRule.title} onChange={handleChange_title}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextBody\">\r\n                            <Form.Label column sm=\"2\">\r\n                                Body\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control as=\"textarea\" value={customRule.body} onChange={handleChange_body}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer><Button onClick={handleSubmit}>Submit</Button></Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n        <br></br>\r\n        </>\r\n    )}\r\n\r\nexport default Rules;\r\n\r\n// TODO:\r\n//      ADD A RULE FUNCTIONALITY","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\CreateGame.tsx",[],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\axiosAPI.tsx",[],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\refreshToken.tsx",[],{"ruleId":"71","severity":1,"message":"72","line":33,"column":10,"nodeType":"73","messageId":"74","endLine":33,"endColumn":17},{"ruleId":"71","severity":1,"message":"75","line":34,"column":16,"nodeType":"73","messageId":"74","endLine":34,"endColumn":24},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"71","severity":1,"message":"80","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"76","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"71","severity":1,"message":"72","line":25,"column":14,"nodeType":"73","messageId":"74","endLine":25,"endColumn":21},{"ruleId":"76","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"71","severity":1,"message":"72","line":31,"column":12,"nodeType":"73","messageId":"74","endLine":31,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":93,"column":7,"nodeType":"89","endLine":93,"endColumn":9,"suggestions":"90"},"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"'axios' is defined but never used.",["91"],["92"],["91"],["92"],["91"],["92"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [auth]",{"range":"96","text":"97"},[3171,3173],"[auth]"]