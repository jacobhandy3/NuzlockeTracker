[{"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\App.tsx":"1","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\index.tsx":"3","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\SignUp.tsx":"4","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Profile.tsx":"5","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Login.tsx":"6","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\History.tsx":"7","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Game.tsx":"8","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Rules.tsx":"9","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\CreateGame.tsx":"10"},{"size":3188,"mtime":1607551409998,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1607210213999,"results":"13","hashOfConfig":"12"},{"size":591,"mtime":1607546785510,"results":"14","hashOfConfig":"12"},{"size":1700,"mtime":1607462854844,"results":"15","hashOfConfig":"12"},{"size":3367,"mtime":1607462856141,"results":"16","hashOfConfig":"12"},{"size":1959,"mtime":1607462855424,"results":"17","hashOfConfig":"12"},{"size":2332,"mtime":1607532007054,"results":"18","hashOfConfig":"12"},{"size":4395,"mtime":1607713896873,"results":"19","hashOfConfig":"12"},{"size":2690,"mtime":1607705057656,"results":"20","hashOfConfig":"12"},{"size":3035,"mtime":1607736212201,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vkz25v",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\App.tsx",["49","50"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\index.tsx",[],["51","52"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\SignUp.tsx",["53"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Modal,Button,Form } from \"react-bootstrap\";\r\n\r\nfunction SignUpModal() {\r\n\r\n    const [show, setShow]: [boolean, (show:boolean) => void] = React.useState<boolean>(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleShow}>Sign Up</Button>\r\n            <Modal show={show} onHide={handleClose} size=\"lg\" aria-labelledby=\"container-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Sign Up\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicUsername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control placeholder=\"Enter username\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUpModal;\r\n// TODO:\r\n//      Sign Up Functionality",["54","55"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Profile.tsx",["56","57","58"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Modal,Button,Form,Row,Col } from \"react-bootstrap\";\r\n\r\ninterface IProfile {\r\n    username: string,\r\n    date_joined: Date,\r\n    completed_runs: number,\r\n}\r\nconst defaultProfile:IProfile[] = []\r\n\r\nfunction ProfileModal() {\r\n    const [profile,setProfile]: [IProfile[], (profile: IProfile[]) => void] = React.useState(defaultProfile);\r\n    const [show, setShow]: [boolean, (show:boolean) => void] = React.useState<boolean>(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleShow}>Profile</Button>\r\n            <Modal show={show} onHide={handleClose} size=\"lg\" aria-labelledby=\"container-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Your Profile\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextUsername\">\r\n                            <Form.Label column sm=\"2\">\r\n                                Username\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control plaintext readOnly defaultValue=\"profile[0].username\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column sm=\"2\">\r\n                                Password\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextJoinedDate\">\r\n                            <Form.Label column sm=\"2\">\r\n                                Joined\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control plaintext readOnly defaultValue=\"Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(new Date(profile[0].date_joined))\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextCompleteRuns\">\r\n                            <Form.Label column sm=\"2\">\r\n                                Completed Runs\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control plaintext readOnly defaultValue=\"profile[0].completed_runs\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileModal;\r\n// TODO:\r\n//      PASSWORD CHANGE FUNCTIONALITY\r\n//      GET PROFILE INFO IN useEffect()","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Login.tsx",["59"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Modal,Button,Form,Row,Col } from \"react-bootstrap\";\r\n\r\nfunction LoginModal() {\r\n    const [show, setShow]: [boolean, (show:boolean) => void] = React.useState<boolean>(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleShow}>Login</Button>\r\n            <Modal show={show} onHide={handleClose} size=\"lg\" aria-labelledby=\"container-modal-title-vcenter\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Login\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextUsername\">\r\n                            <Form.Label column sm=\"2\">\r\n                                Username\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control placeholder=\"Username\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column sm=\"2\">\r\n                                Password\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginModal;\r\n// TODO:\r\n//      LOGIN FUNCTIONALITY","C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\History.tsx",["60"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Button,\r\n    Container, Row, Col,\r\n    Card,\r\n  } from 'react-bootstrap';\r\n\r\n  interface IHistory {\r\n      game: number,\r\n      title: string,\r\n      body: string,\r\n      start_date: Date,\r\n      end_date: Date,\r\n      slug: string,\r\n  }\r\n\r\n  const defaultHistory:IHistory[] = [];\r\n\r\n  function History(): JSX.Element {\r\n      //states\r\n      const [history,setHistory]: [IHistory[], (history: IHistory[]) => void] = React.useState(defaultHistory);\r\n      const [loading,setLoading]: [boolean, (loading:boolean) => void] = React.useState<boolean>(true);\r\n    //   const [error,setError]: [string, (error:string) => void] = React.useState(\"\");\r\n      //effects\r\n      //GET HISTORY LIST FROM API\r\n      React.useEffect(() => {\r\n          axios.get<IHistory[]>(\"http://127.0.0.1:8000/api/history/\").then(response => {\r\n                    setHistory(response.data);\r\n                    setLoading(false);\r\n                    console.log(response.data);\r\n                });\r\n      }, []);\r\n      return (\r\n          <div>\r\n              {history.map(h => {\r\n                  return <Container fluid>\r\n                    <Card key={h.slug}>\r\n                        <Card.Header>\r\n                            {h.title}\r\n                            <Button variant=\"danger\" href=\"\">X</Button>\r\n                        </Card.Header>\r\n                        <Card.Body><Card.Text>{h.body}</Card.Text></Card.Body>\r\n                        <Card.Footer className=\"text-muted\">\r\n                            <Row className=\"row align-items-center\">\r\n                                <Col>{Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(new Date(h.start_date))}</Col>\r\n                                <Col>{Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(new Date(h.end_date))}</Col>\r\n                            </Row>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Container>\r\n              })}\r\n            </div>\r\n      )\r\n  }\r\n\r\n  export default History;\r\n\r\n  //TODO:\r\n  //    NOT RECEIVING DATA FROM API BUT REQUEST MADE IN DJANGO",["61","62"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Game.tsx",["63"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\Rules.tsx",["64","65","66","67"],"C:\\Users\\jakem\\Documents\\GitHub\\NuzlockeTracker\\frontend\\src\\components\\CreateGame.tsx",["68","69","70"],{"ruleId":"71","severity":1,"message":"72","line":30,"column":10,"nodeType":"73","messageId":"74","endLine":30,"endColumn":17},{"ruleId":"71","severity":1,"message":"75","line":31,"column":16,"nodeType":"73","messageId":"74","endLine":31,"endColumn":24},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"71","severity":1,"message":"80","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"76","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"71","severity":1,"message":"80","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"83","line":13,"column":12,"nodeType":"73","messageId":"74","endLine":13,"endColumn":19},{"ruleId":"71","severity":1,"message":"84","line":13,"column":20,"nodeType":"73","messageId":"74","endLine":13,"endColumn":30},{"ruleId":"71","severity":1,"message":"80","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":23,"column":14,"nodeType":"73","messageId":"74","endLine":23,"endColumn":21},{"ruleId":"76","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"71","severity":1,"message":"72","line":28,"column":12,"nodeType":"73","messageId":"74","endLine":28,"endColumn":19},{"ruleId":"71","severity":1,"message":"87","line":4,"column":11,"nodeType":"73","messageId":"74","endLine":4,"endColumn":22},{"ruleId":"71","severity":1,"message":"88","line":7,"column":3,"nodeType":"73","messageId":"74","endLine":7,"endColumn":9},{"ruleId":"71","severity":1,"message":"89","line":7,"column":11,"nodeType":"73","messageId":"74","endLine":7,"endColumn":14},{"ruleId":"71","severity":1,"message":"90","line":7,"column":16,"nodeType":"73","messageId":"74","endLine":7,"endColumn":27},{"ruleId":"71","severity":1,"message":"80","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"91","line":11,"column":6,"nodeType":"73","messageId":"74","endLine":11,"endColumn":13},{"ruleId":"71","severity":1,"message":"92","line":75,"column":10,"nodeType":"73","messageId":"74","endLine":75,"endColumn":21},"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'axios' is defined but never used.",["93"],["94"],"'profile' is assigned a value but never used.","'setProfile' is assigned a value but never used.",["93"],["94"],"'ButtonGroup' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'newGame' is defined but never used.","'addListItem' is defined but never used.","no-global-assign","no-unsafe-negation"]